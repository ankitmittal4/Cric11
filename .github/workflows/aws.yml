name: Deploy Cric11-backend to Amazon ECS
on:
  push:
    branches: [ main ]

defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Extract branch name
        id: extract_branch
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Build a docker container and push it to ECR so that it can be deployed to ECS.
          echo "${GITHUB_REF##*/}"
          docker build -t $ECR_REGISTRY/backend:${GITHUB_REF##*/} .
          docker push $ECR_REGISTRY/backend:${GITHUB_REF##*/}
          echo "::set-output name=image::$ECR_REGISTRY/backend:${GITHUB_REF##*/}"
          aws ecs update-service --cluster ${GITHUB_REF##*/} --task-definition backend-${GITHUB_REF##*/} --service backend --force-new-deployment
          aws ecr list-images --repository-name backend --query 'imageIds[?type(imageTag)!=`string`].[imageDigest]' --output text | while read line; do aws ecr batch-delete-image --repository-name backend --image-ids imageDigest=$line; done
